services:
  # Marzban VPN Panel (оптимизированный)
  marzban:
    image: gozargah/marzban:latest
    container_name: marzban
    restart: unless-stopped
    env_file: .env
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - UVICORN_WORKERS=1
    ports:
      - "127.0.0.1:8000:8000"
    volumes:
      - /var/lib/marzban:/var/lib/marzban
      - ./xray_config.json:/usr/local/share/xray/xray_config.json:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      - marzban_net
    depends_on:
      - mysql
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8000/api/admin/token", "-k"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL (ультра-минимальный)
  mysql:
    image: mysql:8.0
    container_name: marzban_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: marzban
      MYSQL_USER: marzban
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - /var/lib/marzban/mysql:/var/lib/mysql
      - ./mysql-ultra-minimal.conf:/etc/mysql/conf.d/minimal.cnf:ro
    command: >
      --bind-address=0.0.0.0
      --mysqlx-bind-address=0.0.0.0
      --disable-log-bin
      --performance-schema=OFF
      --skip-name-resolve
    networks:
      - marzban_net
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 3
      start_period: 30s

  # Nginx (минимальный)
  nginx:
    image: nginx:alpine
    container_name: marzban_nginx
    restart: unless-stopped
    ports:
      - "2053:2053"
      - "2083:2083"
      - "2087:2087"
      - "8080:8080"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    networks:
      - marzban_net
    depends_on:
      - marzban
    command: |
      sh -c 'while :; do
        sleep 6h & wait $${!};
        nginx -s reload;
      done & nginx -g "daemon off;"'
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.2'
        reservations:
          memory: 16M

  # Certbot (минимальный)
  certbot:
    image: certbot/certbot:latest
    container_name: marzban_certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt:rw
      - ./certbot/www:/var/www/certbot:rw
    entrypoint: |
      sh -c 'trap exit TERM;
      while :; do
        certbot renew --quiet --no-self-upgrade;
        sleep 12h & wait $${!};
      done;'
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.1'

networks:
  marzban_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24